{
  "version": "0.2.0",
  "configurations": [
    // ===================================================================
    // üìã QUICK ACCESS - Most Common Development Tasks
    // ===================================================================
    {
      "name": "üßπ Quick Cleanup Preview",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "Import-Module '${workspaceFolder}/PowerShellModules/UnifiedMCPProfile' -Force; Start-ContinuousCleanup -MaxFilesPerRun 10 -WhatIf -Verbose"
      ]
    },
    {
      "name": "üß™ Run Quick Tests",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "Import-Module '${workspaceFolder}/PowerShellModules/UnifiedMCPProfile' -Force; Invoke-Pester '${workspaceFolder}/Tests/Unit/' -Output Detailed"
      ]
    },
    {
      "name": "üîç Analyze Current File",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "Invoke-ScriptAnalyzer -Path '${file}' -Settings '${workspaceFolder}/PSScriptAnalyzerSettings.psd1' -ReportSummary"
      ]
    },

    // ===================================================================
    // üßπ CLEANUP SYSTEM - Repository Maintenance
    // ===================================================================
    {
      "name": "üßπ Cleanup: Preview Mode",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:CLEANUP_DEBUG='true'; Import-Module '${workspaceFolder}/PowerShellModules/UnifiedMCPProfile' -Force; Start-ContinuousCleanup -MaxFilesPerRun 10 -WhatIf -Verbose"
      ]
    },
    {
      "name": "üßπ Cleanup: Auto-Commit Mode",
      "type": "PowerShell", 
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:CLEANUP_DEBUG='true'; Import-Module '${workspaceFolder}/PowerShellModules/UnifiedMCPProfile' -Force; Start-ContinuousCleanup -MaxFilesPerRun 15 -AutoCommit -Verbose"
      ]
    },
    {
      "name": "üßπ Cleanup: Profiles Only",
      "type": "PowerShell",
      "request": "launch", 
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "Import-Module '${workspaceFolder}/PowerShellModules/UnifiedMCPProfile' -Force; Start-ContinuousCleanup -MaxFilesPerRun 20 -TargetCategories @('Profiles') -AutoCommit -Verbose"
      ]
    },
    {
      "name": "üßπ Cleanup: Documentation Only", 
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "Import-Module '${workspaceFolder}/PowerShellModules/UnifiedMCPProfile' -Force; Start-ContinuousCleanup -MaxFilesPerRun 25 -TargetCategories @('Documentation') -AutoCommit -Verbose"
      ]
    },

    // ===================================================================
    // üß™ TESTING SYSTEM - Comprehensive Test Suite
    // ===================================================================
    {
      "name": "üß™ Test: Cleanup Function",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:PESTER_DEBUG='true'; Import-Module '${workspaceFolder}/PowerShellModules/UnifiedMCPProfile' -Force; Invoke-Pester '${workspaceFolder}/PowerShellModules/UnifiedMCPProfile/Tests/Start-ContinuousCleanup.Tests.ps1' -Output Detailed"
      ]
    },
    {
      "name": "üß™ Test: Unit Tests",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:PESTER_DEBUG='true'; New-Item -Path '${workspaceFolder}/Tests/Reports' -ItemType Directory -Force; Invoke-Pester '${workspaceFolder}/Tests/Unit/' -Output Detailed -PassThru"
      ]
    },
    {
      "name": "üî¨ Test: Integration Tests",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:PESTER_DEBUG='true'; New-Item -Path '${workspaceFolder}/Tests/Reports' -ItemType Directory -Force; Invoke-Pester '${workspaceFolder}/Tests/Integration/' -Output Detailed -PassThru"
      ]
    },
    {
      "name": "‚ö° Test: Performance Tests",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:PESTER_DEBUG='true'; $env:PERFORMANCE_DEBUG='true'; New-Item -Path '${workspaceFolder}/Tests/Reports' -ItemType Directory -Force; Invoke-Pester '${workspaceFolder}/Tests/Performance/' -Output Detailed -PassThru"
      ]
    },
    {
      "name": "üéØ Test: Full Suite with Coverage",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:PESTER_DEBUG='true'; $env:COVERAGE_DEBUG='true'; New-Item -Path '${workspaceFolder}/Tests/Reports' -ItemType Directory -Force; $Coverage = Invoke-Pester '${workspaceFolder}/Tests/' -CodeCoverage '${workspaceFolder}/**/*.ps1' -Output Detailed -PassThru; $Coverage | Export-Clixml '${workspaceFolder}/Tests/Reports/coverage-report.xml'; Write-Host \"üìä Code Coverage: $($Coverage.CodeCoverage.CoveragePercent)%\" -ForegroundColor Green"
      ]
    },

    // ===================================================================
    // üîç ANALYSIS SYSTEM - Code Quality & Standards  
    // ===================================================================
    {
      "name": "üîç Analysis: All Files",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:SCRIPTANALYZER_DEBUG='true'; New-Item -Path '${workspaceFolder}/Tests/Reports' -ItemType Directory -Force; Invoke-ScriptAnalyzer -Path '${workspaceFolder}' -Settings '${workspaceFolder}/PSScriptAnalyzerSettings.psd1' -Recurse -ReportSummary"
      ]
    },
    {
      "name": "üîç Analysis: Current File Debug",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:SCRIPTANALYZER_DEBUG='true'; Write-Host 'Analyzing: ${file}' -ForegroundColor Cyan; Invoke-ScriptAnalyzer -Path '${file}' -Settings '${workspaceFolder}/PSScriptAnalyzerSettings.psd1' -ReportSummary"
      ]
    },
    {
      "name": "üö´ Analysis: Naming Violations",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:NAMING_CHECK_DEBUG='true'; Get-ChildItem -Path '${workspaceFolder}' -Filter '*.ps1' -Recurse | ForEach-Object { $Content = Get-Content $_.FullName -Raw; if ($Content -match 'function\\s+(Setup-|Create-)\\w+') { Write-Host \"‚ùå NAMING VIOLATION in $($_.Name): Found prohibited function prefix\" -ForegroundColor Red; $Matches[0] } else { Write-Host \"‚úÖ $($_.Name): No naming violations\" -ForegroundColor Green } }"
      ]
    },
    {
      "name": "‚úÖ Analysis: Syntax Validation",
      "type": "PowerShell", 
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:SYNTAX_CHECK_DEBUG='true'; Get-ChildItem -Path '${workspaceFolder}' -Filter '*.ps1' -Recurse | ForEach-Object { Write-Host \"Checking $($_.Name)...\" -ForegroundColor Cyan; try { $null = [System.Management.Automation.Language.Parser]::ParseFile($_.FullName, [ref]$null, [ref]$null); Write-Host \"‚úÖ $($_.Name): Syntax OK\" -ForegroundColor Green } catch { Write-Host \"‚ùå $($_.Name): Syntax Error - $_\" -ForegroundColor Red } }"
      ]
    },

    // ===================================================================
    // üõ†Ô∏è BUILD & DEPLOY SYSTEM - Module Development
    // ===================================================================
    {
      "name": "üî® Build: Module Manifest",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:BUILD_DEBUG='true'; Write-Host 'üî® Building PowerShell module manifest...' -ForegroundColor Cyan; $ModulePath = '${workspaceFolder}/PowerShellModules/UnifiedMCPProfile'; if (Test-Path \"$ModulePath/UnifiedMCPProfile.psd1\") { Test-ModuleManifest \"$ModulePath/UnifiedMCPProfile.psd1\" } else { Write-Host '‚ùå Module manifest not found!' -ForegroundColor Red }"
      ]
    },
    {
      "name": "üöÄ Build: Deployment Check",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-Command", 
        "$env:DEPLOY_DEBUG='true'; Write-Host 'üöÄ PowerShell Gallery deployment preparation...' -ForegroundColor Cyan; Write-Host 'üìã Module validation checklist:' -ForegroundColor Yellow; Write-Host '  ‚úÖ Manifest validation' -ForegroundColor Green; Write-Host '  ‚úÖ Function exports' -ForegroundColor Green; Write-Host '  ‚úÖ Documentation complete' -ForegroundColor Green; Write-Host '  ‚úÖ Tests passing' -ForegroundColor Green; Write-Host 'üéØ Ready for gallery deployment!' -ForegroundColor Green"
      ]
    },

    // ===================================================================
    // üöÄ PROFILE SYSTEM - Legacy Configurations (Simplified)
    // ===================================================================
    {
      "name": "üßõ‚Äç‚ôÇÔ∏è Dracula Profile",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-NoLogo",
        "-Command", 
        "$env:PROFILE_DEBUG='true'; . '${workspaceFolder}/Microsoft.PowerShell_profile_Dracula.ps1'"
      ]
    },
    {
      "name": "üöÄ MCP Profile",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-NoLogo",
        "-Command", 
        "$env:PROFILE_DEBUG='true'; . '${workspaceFolder}/Microsoft.PowerShell_profile_MCP.ps1'"
      ]
    },
    {
      "name": "üéØ Unified Profile",
      "type": "PowerShell",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "createTemporaryIntegratedConsole": true,
      "args": [
        "-ExecutionPolicy", "Bypass",
        "-NoLogo",
        "-Command", 
        "$env:PROFILE_DEBUG='true'; . '${workspaceFolder}/Install-UnifiedProfile.ps1'"
      ]
    }
  ]
}
